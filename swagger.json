{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger PetsSupport ",
    "description": "This is the specification for the Pets Support server. ",
    "version": "0.0.1"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:65000/api/" },
    { "url": "https://petssupportback-production.up.railway.app" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "News",
      "description": "Operations with news"
    },
    {
      "name": "ServicesSidebar",
      "description": "Operations with our partners"
    },
    {
      "name": "Notices",
      "description": "Operations with our notices"
    },
    {
      "name": "User",
      "description": "Operations with users"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "description": "Registration's object",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegistrationRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "This email in use",
            "content": {}
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "description": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "description": "Logout user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "description": "User login",
        "parameters": [],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password are not found",
            "content": {}
          }
        }
      }
    },
    "/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices by category",
        "description": "Returns all notices by category",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Category by notices: [sell, in good hands, lost/found]",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "the number of query objects to display on one page for pagination",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeByCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: This category doesn`t exist",
            "content": {}
          }
        }
      }
    },
    "/notices/{id}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get one notice by ID",
        "description": "Get one notice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Notice with id=${id} not found",
            "content": {}
          }
        }
      }
    },
    "/notices/owner": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all users notices",
        "description": "Get all users notices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "the number of query objects to display on one page for pagination",
            "required": false,
            "type": "integer"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUserNoticesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Invalid token",
            "content": {}
          }
        }
      }
    },
    "/notices/owner/{id}": {
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notice by ID",
        "description": "Delete notice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice Id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "id=${id} is not correct id format",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Invalid token",
            "content": {}
          },
          "404": {
            "description": "Notice with id: ${params.id} not found!",
            "content": {}
          }
        }
      }
    },
    "/notices/favorite/{id}": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add notice to favorite",
        "description": "Add notice to favorite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeToFavoriteResponse"
                }
              }
            }
          },
          "400": {
            "description": "id=${id} is not correct id format",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Invalid token",
            "content": {}
          },
          "409": {
            "description": "Notice with id: ${id} is already in your favorite list",
            "content": {}
          }
        }
      }
    },
    "/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all users favorite notices",
        "description": "Get all users favorite notices",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "description": "search by keyword",
            "type": "string"
          },

          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "number of notices per page",
            "type": "integer"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Saccess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetFavoriteNoticesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Please provide a token, no token in authorization header",
            "content": {}
          }
        }
      }
    },
    "/user/pets": {
      "post": {
        "tags": ["User"],
        "summary": "Add User pets",
        "description": "Add User pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Pets object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Please provide a token, no token in authorization header",
            "content": {}
          }
        }
      }
    },
    "/user/pets/{id}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete User pet",
        "description": "Delete User pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User pet Id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemovePetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Please provide a token, no token in authorization header",
            "content": {}
          },
          "404": {
            "description": "Failure! pet with id: ${id} is not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update user Pet Image",
        "description": "Update user Pet Image",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User pet Id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Pet image",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePetImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePetImageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Please provide a token, no token in authorization header",
            "content": {}
          },
          "404": {
            "description": "Failure! pet with id: ${id} is not found",
            "content": {}
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get all user info with his pets",
        "description": "Get all user info with his pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Please provide a token, no token in authorization header",
            "content": {}
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get all news",
        "description": "Get all news",
        "parameters": [],

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": ["ServicesSidebar"],
        "summary": "Get all news",
        "description": "Get all Services",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServicesResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name", "phone", "city"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name only latin letter, all number and all special characters",
            "example": "Maks"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "format": "phone",
            "example": "+380932225577"
          },
          "city": {
            "type": "string",
            "description": "User's city and region (only latin letters, all number and all special characters)",
            "example": "Kiev, Ukraine"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@gmail.com"
              },
              "name": {
                "type": "string",
                "description": "User's name only latin letter, all number and all special characters",
                "example": "Bob"
              },
              "phone": {
                "type": "string",
                "description": "User's phone",
                "format": "phone",
                "example": "+380932225577"
              },
              "city": {
                "type": "string",
                "description": "User's city and region (only latin letter, all number and all special characters)",
                "example": "Kiev,Ukraine"
              }
            }
          }
        },
        "example": {
          "user": {
            "email": "bob@gmail.com",
            "name": "Bob",
            "city": "Kyiv,Ukraine",
            "phone": "+380936987452"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's accessToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@gmail.com"
              }
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac",
          "user": {
            "email": "bob@gmail.com"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name only latin letter, all number and all special characters",
            "example": "Bob"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "format": "phone",
            "example": "+380932225577"
          },
          "city": {
            "type": "string",
            "description": "User's city and region (only latin letter, all number and all special characters)",
            "example": "Kiev,Ukraine"
          },
          "birthday": {
            "type": "string",
            "description": "User's date of birthday in format :dd.mm.yyyy",
            "example": "01.03.2010"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's image",
            "example": "https://e7.pngegg.com/pngimages/499/839/png-clipart-cat-silhouette-sticker-dog-beige-color-mammal-leaf.png"
          },
          "_id": {
            "type": "string",
            "description": "User's city and region (only  latin letter,all number and all special characters)",
            "example": "Kiev, Ukraine"
          }
        },
        "example": {
          "user": {
            "name": "Bob",
            "email": "bob@gmail.com",
            "phone": "+380936987452",
            "city": "Kiev,Ukraine",
            "birthday": "01.03.2010",
            "avatarURL": "https://e7.pngegg.com/pngimages/499/839/png-clipart-cat-silhouette-sticker-dog-beige-color-mammal-leaf.png",
            "_id": "63b420f8613598919c6a71a8"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "a message about the successful logout of the user ",
            "example": "Logout success"
          }
        },
        "example": {
          "message": "Logout success"
        }
      },
      "GetOneNoticeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID notice",
            "example": "63b6ec81f474e0269d338e9e"
          },
          "category": {
            "type": "string",
            "description": "Category by notice",
            "example": "Lost/found"
          },
          "title": {
            "type": "string",
            "description": "Title by notice",
            "example": "lost persian cat"
          },
          "name": {
            "type": "string",
            "description": "Pets name",
            "example": "Persik"
          },
          "birthday": {
            "type": "string",
            "description": "Pets birthday",
            "example": "02.02.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "persian cat"
          },
          "sex": {
            "type": "string",
            "description": "Sex list: [male, female]",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Dnipro,Ukraine"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "imageURL": {
            "type": "string",
            "description": "Pet image",
            "example": "https://unsplash.com/photos/ydnTy6Gfuao"
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "if you see or know an information about this cat, please text me back"
          },
          "owner": {
            "type": "string",
            "description": "ID owner notices",
            "example": "63b420f8613598919c6a71a8"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of create notice",
            "example": "2023-01-05T15:28:01.426Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of update notice",
            "example": "2023-01-05T15:28:01.426Z"
          }
        },
        "example": {
          "_id": "63b4217e613598919c6a71ad",
          "category": "lost/found",
          "title": "lost persian cat",
          "name": "Persik",
          "birthday": "02.02.2020",
          "breed": "persian cat",
          "sex": "male",
          "location": "Dnipro",
          "price": 5000,
          "imageURL": "https://unsplash.com/photos/ydnTy6Gfuao",
          "comments": "if you see or know an information about this cat, please text me back",
          "owner": "63b420f8613598919c6a71a8",
          "createdAt": "2023-01-03T12:37:18.187Z",
          "updatedAt": "2023-01-03T12:37:18.187Z"
        }
      },
      "GetNoticeByCategoryResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "ID notice",
                  "example": "63b6ec81f474e0269d338e9e"
                },
                "category": {
                  "type": "string",
                  "description": "Category by notice",
                  "example": "Lost/found"
                },
                "title": {
                  "type": "string",
                  "description": "Title by notice",
                  "example": "lost persian cat"
                },
                "name": {
                  "type": "string",
                  "description": "Pets name",
                  "example": "Persik"
                },
                "birthday": {
                  "type": "string",
                  "description": "Pets birthday",
                  "example": "02.02.2020"
                },
                "breed": {
                  "type": "string",
                  "description": "Pets breed",
                  "example": "persian cat"
                },
                "sex": {
                  "type": "string",
                  "description": "Sex list: [male, female]",
                  "example": "male"
                },
                "location": {
                  "type": "string",
                  "description": "Pet location",
                  "example": "Dnipro,Ukraine"
                },
                "price": {
                  "type": "integer",
                  "description": "Price",
                  "example": 5000
                },
                "imageURL": {
                  "type": "string",
                  "description": "Pet image",
                  "example": "https://unsplash.com/photos/ydnTy6Gfuao"
                },
                "comments": {
                  "type": "string",
                  "description": "Comments",
                  "example": "if you see or know an information about this cat, please text me back"
                },
                "owner": {
                  "type": "string",
                  "description": "ID owner notices",
                  "example": "63b420f8613598919c6a71a8"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Date of create notice",
                  "example": "2023-01-05T15:28:01.426Z"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Date of update notice",
                  "example": "2023-01-05T15:28:01.426Z"
                }
              }
            }
          }
        },
        "example": {
          "notices": [
            {
              "_id": "63b5ce5d8adff5be0dbe3457",
              "category": "lost/found",
              "title": "lost persian cat",
              "name": "Persik",
              "birthday": "02.02.2020",
              "breed": "persian cat",
              "sex": "male",
              "location": "Dnipro, Ukraine",
              "price": 5000,
              "imageURL": "https://unsplash.com/photos/ydnTy6Gfuao",
              "comments": "if you see or know an information about this cat, please text me back",
              "owner": "63b58e631b6aab70d0834284",
              "createdAt": "2023-01-04T19:07:09.464Z",
              "updatedAt": "2023-01-04T19:07:09.464Z"
            }
          ]
        }
      },
      "AddPetRequest": {
        "type": "object",
        "required": ["name", "birthdate", "breed"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet name",
            "example": "Jonny"
          },
          "birthdate": {
            "type": "string",
            "description": "Day of pet birth",
            "example": "20.05.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet breed",
            "example": "Turkish Angora Cat"
          },
          "comments": {
            "type": "string",
            "description": "comments",
            "example": "My little kitten"
          },
          "imageURL": {
            "type": "string",
            "format": "binary",
            "description": "Pet image",
            "example": "image.jpeg"
          }
        },
        "example": {
          "name": "Jonny",
          "birthday": "20.05.2020",
          "breed": "Turkish Angora Cat",
          "comments": "My little kitten",
          "imageURL": "image.jpeg"
        }
      },
      "AddPetResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "id",
            "example": "63b548d5471bb460e28dc813"
          },
          "name": {
            "type": "string",
            "description": "Pet name",
            "example": "Jonny"
          },
          "birthdate": {
            "type": "string",
            "description": "Day of pet birth",
            "example": "20.05.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet breed",
            "example": "Turkish Angora Cat"
          },
          "imageURL": {
            "type": "string",
            "description": "Pet image",
            "example": "https://res.cloudinary.com/dsrjlhmr8/image/upload/v1672825045/acvvewo9t58ojoytnaks.jpg"
          },
          "comments": {
            "type": "string",
            "description": "comments",
            "example": "My little kitten"
          },
          "owner": {
            "type": "string",
            "description": "Owners ID",
            "example": "63b548d5471bb460e28dc813"
          },
          "createdAt": {
            "type": "string",
            "description": "date of creation",
            "example": "2023-01-04T09:37:25.604Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "date of update",
            "example": "2023-01-04T09:37:25.604Z"
          }
        },
        "example": {
          "_id": "63b548d5471bb460e28dc813",
          "name": "Jonny",
          "birthday": "20.05.2020",
          "breed": "Turkish Angora Cat",
          "avatarURL": "https://res.cloudinary.com/dsrjlhmr8/image/upload/v1672825045/acvvewo9t58ojoytnaks.jpg",
          "comments": "My little kitten",
          "owner": "63b420f8613598919c6a71a8",
          "createdAt": "2023-01-04T09:37:25.604Z",
          "updatedAt": "2023-01-04T09:37:25.604Z"
        }
      },
      "RemovePetResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message about delation",
            "example": "Pet with name ${pet.name} successfully deleted"
          },
          "id": {
            "type": "string",
            "description": "pet ID",
            "example": "63b548d5471bb460e28dc813"
          }
        },
        "example": {
          "message": "Pet with name Jonny successfully deleted",
          "id": "63b548d5471bb460e28dc813"
        }
      },
      "UpdatePetImageRequest": {
        "type": "object",
        "required": ["imageURL"],
        "properties": {
          "imageURL": {
            "type": "string",
            "description": "New pet image",
            "example": "image.jpeg"
          }
        },
        "example": {
          "imageURL": "image.jpeg"
        }
      },
      "UpdatePetImageResponse": {
        "type": "object",
        "required": ["imageURL"],
        "properties": {
          "message": {
            "type": "string",
            "description": "Message about update",
            "example": "Your pet ${pet.name} image successfully updated"
          },
          "imageURL": {
            "type": "string",
            "description": "Image URL from Cloudinary",
            "example": "https://res.cloudinary.com/dsrjlhmr8/image/upload/v1672825045/acvvewo9t58ojoytnaks.jpg"
          }
        },
        "example": {
          "message": "Your pet Jonny image successfully updated",
          "imageURL": "https://res.cloudinary.com/dsrjlhmr8/image/upload/v1672825045/acvvewo9t58ojoytnaks.jpg"
        }
      },
      "GetUserInfoResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "user ID",
                "example": "63b548d5471bb460e28dc813"
              },
              "avatarURL": {
                "type": "string",
                "description": "User avatar",
                "example": "https://res.cloudinary.com/dsrjlhmr8/image/upload/v1672825045/acvvewo9t58ojoytnaks.jpg"
              },
              "userPets": {
                "type": "array",
                "items": {
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "pet ID",
                      "example": "63b548d5471bb460e28dc813"
                    },
                    "name": {
                      "type": "string",
                      "description": "Pet name",
                      "example": "Jonny"
                    },
                    "birthdate": {
                      "type": "string",
                      "description": "Day of pet birth",
                      "example": "20.05.2020"
                    },
                    "breed": {
                      "type": "string",
                      "description": "Pet breed",
                      "example": "Turkish Angora Cat"
                    },
                    "imageURL": {
                      "type": "string",
                      "description": "image your pet",
                      "example": "https://res.cloudinary.com/dsrjlhmr8/image/upload/v1672825045/acvvewo9t58ojoytnaks.jpg"
                    },
                    "comments": {
                      "type": "string",
                      "description": "comments",
                      "example": "My little kitten"
                    },
                    "owner": {
                      "type": "string",
                      "description": "Owners ID",
                      "example": "63b548d5471bb460e28dc813"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "date of creation",
                      "example": "2023-01-04T09:37:25.604Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "date of update",
                      "example": "2023-01-04T09:37:25.604Z"
                    }
                  }
                }
              },
              "userInfo": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Kris"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "test@gmail.com"
                  },
                  "city": {
                    "type": "string",
                    "description": "User city",
                    "example": "Kyiv, Ukraine"
                  },
                  "phone": {
                    "type": "string",
                    "description": "User phone number",
                    "example": "+380931234567"
                  },
                  "birthday": {
                    "type": "string",
                    "description": "User birthday",
                    "example": "00.00.0000"
                  }
                }
              }
            }
          }
        },
        "example": {
          "user": {
            "_id": "63b548d5471bb460e28dc813",
            "avatarURL": "https://res.cloudinary.com/dsrjlhmr8/image/upload/v1673004097/qplslyemyc1eo8qu7jb0.jpg",
            "userPets": [
              {
                "_id": "63b53c929165e3aafa203876",
                "name": "Jonny",
                "birthday": "20.05.2020",
                "breed": "Turkish Angora Cat",
                "avatarURL": "https://res.cloudinary.com/dsrjlhmr8/image/upload/v1673004097/qplslyemyc1eo8qu7jb0.jpg",
                "comments": "My little kitten",
                "owner": "63b548d5471bb460e28dc813",
                "createdAt": "2023-01-04T08:45:06.436Z",
                "updatedAt": "2023-01-04T08:45:06.436Z"
              }
            ],
            "userInfo": {
              "name": "Kris",
              "email": "test@gmail.com",
              "city": "Kyiv, Ukraine",
              "phone": "+380931234567",
              "birthday": "00.00.0000"
            }
          }
        }
      },
      "GetFavoriteNoticesResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID notice",
            "example": "63b6ec81f474e0269d338e9e"
          },
          "category": {
            "type": "string",
            "description": "Category by notice",
            "example": "Sell"
          },
          "title": {
            "type": "string",
            "description": "Title by notice",
            "example": "dog sell"
          },
          "name": {
            "type": "string",
            "description": "Pets name",
            "example": "Sem"
          },
          "birthday": {
            "type": "string",
            "description": "Pets birthday",
            "example": "02.02.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "whiteSnow"
          },
          "sex": {
            "type": "string",
            "description": "Sex list: [male, female]",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Kyiv,Ukraine"
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Selling an awesome puppy"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "owner": {
            "type": "string",
            "description": "owner of notice",
            "example": "63bc8134b63b255e9dc342f5"
          },
          "email": {
            "type": "string",
            "description": "Emeil",
            "example": "olichkamovchan@ukr.net"
          },
          "phone": {
            "type": "string",
            "description": "Phone",
            "example": "+380962066541"
          },
          "imageURL": {
            "type": "string",
            "description": "Pet image",
            "example": "https://via.placeholder.com/300.png/#FDF7F2/#111111"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of update notice",
            "example": "2023-01-05T15:28:01.426Z"
          },

          "updatedAt": {
            "type": "string",
            "description": "Date of update notice",
            "example": "2023-01-05T15:28:01.426Z"
          }
        }
      },
      "AddNoticeToFavoriteResponse": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "ID notices",
            "example": "[63b6ec81f474e0269d338e9e]"
          },
          "message": {
            "type": "string",
            "description": "ID notices",
            "example": "Notice add to favorite"
          }
        },
        "example": {
          "favorite": [
            "63b412bc9f6bb331b54624ae",
            "63b412fca3523c134418e086",
            "63b413796e2832af1fa84d37",
            "63b4217e613598919c6a71ad"
          ],
          "message": "Notice add to favorite"
        }
      },
      "GetUserNoticesResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID notice",
            "example": "63b6ec81f474e0269d338e9e"
          },
          "category": {
            "type": "string",
            "description": "Category by notice",
            "example": "Sell"
          },
          "title": {
            "type": "string",
            "description": "Title by notice",
            "example": "dog sell"
          },
          "name": {
            "type": "string",
            "description": "Pets name",
            "example": "Sem"
          },
          "birthday": {
            "type": "string",
            "description": "Pets birthday",
            "example": "02.02.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "whiteSnow"
          },
          "sex": {
            "type": "string",
            "description": "Sex list: [male, female]",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Kyiv,Ukraine"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "imageURL": {
            "type": "string",
            "description": "Pet image",
            "example": "https://via.placeholder.com/300.png/#FDF7F2/#111111"
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Selling an awesome puppy"
          },
          "owner": {
            "type": "string",
            "description": "ID owner notices",
            "example": "63b420f8613598919c6a71a8"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of create notice",
            "example": "2023-01-05T15:28:01.426Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of update notice",
            "example": "2023-01-05T15:28:01.426Z"
          }
        },
        "example": {
          "_id": "63b4217e613598919c6a71ad",
          "category": "sell",
          "title": "dog sell",
          "name": "Sem",
          "birthday": "02.02.2020",
          "breed": "white",
          "sex": "female",
          "location": "kyiv",
          "price": 5000,
          "imageURL": "http://www.allwomens.ru/uploads/posts/2014-09/1411469687_snjatsja-krysy3.jpg",
          "comments": "sads  axfv  asxvc  gfdhgfjhkfjgfhgdfdyrejfhh",
          "owner": "63b420f8613598919c6a71a8",
          "createdAt": "2023-01-03T12:37:18.187Z",
          "updatedAt": "2023-01-03T12:37:18.187Z"
        }
      },
      "RemoveNoticeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message about success deleted",
            "example": "notice with id: 63b4217e613598919c6a71ad has been deleted"
          },
          "id": {
            "type": "string",
            "description": "Id notices success deleted",
            "example": "63b4217e613598919c6a71ad"
          }
        },
        "example": {
          "message": "notice with id: 63b4217e613598919c6a71ad has been deleted",
          "id": "63b4217e613598919c6a71ad"
        }
      },
      "NewsResponse": {
        "type": "object",
        "properties": {
          "news": {
            "type": "array",
            "items": {
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id",
                  "example": "63b2a1aac7d7c8862b0f594f"
                },
                "title": {
                  "type": "string",
                  "description": "title",
                  "example": "В День ветеринара..."
                },
                "url": {
                  "type": "string",
                  "description": "url",
                  "example": "https://www.kmlvm.com.ua/v-den-veterynara-v-stolytsi-projde-bezkoshtovnyj-trening-z-nadannya-pershoyi-dopomogy-tvarynam/"
                },
                "description": {
                  "type": "string",
                  "description": "description",
                  "example": "В неділю, 14 серпня, в Тимчасовому притулку для тварин «ВДНГ» пройде ..."
                },
                "date": {
                  "type": "string",
                  "description": "date",
                  "example": "2022-08-12"
                }
              }
            }
          }
        },
        "example": [
          {
            "_id": "63b2a1aac7d7c8862b0f5961",
            "title": "На Полтавщині запровадять заборону на вилов раків: коли діятиме та чому",
            "url": "https://suspilne.media/270658-na-poltavsini-zaprovadat-zaboronu-na-vilov-rakiv-koli-diatime-ta-comu/",
            "description": "У Полтавській області з 15 серпня починає ...",
            "date": "2022-08-14"
          }
        ]
      },
      "ServicesResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "id",
            "example": "63b2a1aac7d7c8862b0f594f"
          },
          "title": {
            "type": "string",
            "description": "title",
            "example": "В День ветеринара..."
          },
          "url": {
            "type": "string",
            "description": "url",
            "example": "https://www.kmlvm.com.ua/v-den-veterynara-v-stolytsi-projde-bezkoshtovnyj-trening-z-nadannya-pershoyi-dopomogy-tvarynam/"
          },
          "addressUrl": {
            "type": "string",
            "description": "addressUrl",
            "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
          },
          "imageUrl": {
            "type": "string",
            "description": "imageUrl",
            "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
          },
          "address": {
            "type": "string",
            "description": "address",
            "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
          },
          "workDays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "isOpen": {
                  "type": "boolean",
                  "description": "isOpen",
                  "example": "false"
                },
                "from": {
                  "type": "string",
                  "description": "open",
                  "example": "11:00"
                },
                "to": {
                  "type": "string",
                  "description": "close",
                  "example": "16:00"
                },
                "weekday": {
                  "type": "string",
                  "description": "weekday",
                  "example": "SU"
                }
              }
            }
          }
        },

        "example": {
          "_id": "63b2a23ac7d7c8862b0f5964",
          "title": "Притулок для бездомних тварин 'Сіріус'",
          "url": "https://dogcat.com.ua",
          "addressUrl": "https://goo.gl/maps/iq8NXEUf31EAQCzc6",
          "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png",
          "address": "Fedorivka, Kyiv Oblast, Ukraine, 07372",
          "workDays": [
            {
              "isOpen": true,
              "from": "11:00",
              "to": "16:00",
              "weekday": "SU"
            }
          ],
          "phone": "+380931934069",
          "email": null
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
